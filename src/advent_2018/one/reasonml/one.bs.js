// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function logl(l) {
  console.log($$Array.of_list(l));
  return /* () */0;
}

function convert (a){{return +a}};

var input = $$Array.to_list($$Array.map(convert, Fs.readFileSync("input.txt", "utf8").split("\n")));

var testInput = /* array */[
  1,
  -2,
  3,
  1
];

console.log(Belt_Array.reduce(testInput, 0, (function (prim, prim$1) {
            return prim + prim$1 | 0;
          })));

function f(_seen, _frequencies, _currentFrequency) {
  while(true) {
    var currentFrequency = _currentFrequency;
    var frequencies = _frequencies;
    var seen = _seen;
    var head = List.hd(frequencies);
    console.log("currentFrequency");
    console.log(currentFrequency);
    var newFrequency = currentFrequency + head | 0;
    var exists = List.exists((function(newFrequency){
        return function (x) {
          return x === newFrequency;
        }
        }(newFrequency)), seen);
    if (exists) {
      console.log("The end.");
      return /* () */0;
    } else {
      var v = Pervasives.$at(seen, /* :: */[
            newFrequency,
            /* [] */0
          ]);
      _currentFrequency = newFrequency;
      _frequencies = List.tl(frequencies);
      _seen = v;
      continue ;
    }
  };
}

var A = 0;

exports.A = A;
exports.logl = logl;
exports.convert = convert;
exports.input = input;
exports.testInput = testInput;
exports.f = f;
/* input Not a pure module */
